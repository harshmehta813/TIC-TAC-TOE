{"version":3,"sources":["Components/Square.jsx","Components/Grid.jsx","Components/Game.jsx","Components/Winner.jsx","App.js","index.js"],"names":["Square","value","onClick","style","className","Grid","squares","map","square","i","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","xO","jumpTo","step","historyPoint","slice","current","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"uLAYeA,EAVA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACjBC,EAAQF,EAAK,kBAAcA,GAAd,UAEnB,OACE,wBAAQG,UAAWD,EAAOD,QAASA,EAAnC,SACGD,KCIQI,EARF,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASJ,EAAZ,EAAYA,QAAZ,OACX,qBAAKE,UAAU,QAAf,SACGE,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACX,cAAC,EAAD,CAAgBR,MAAOO,EAAQN,QAAS,kBAAMA,EAAQO,KAAzCA,SCkDJC,EApDF,WACX,MAA8BC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QAAtD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,ECRD,SAAyBd,GAW9B,IAVA,IAAMe,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CACrC,kBAAkBY,EAAMZ,GAAxB,GAAOc,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAInB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GACpE,OAAOnB,EAAQiB,GAGnB,OAAO,KDTQG,CAAgBZ,EAAQE,IACjCW,EAAKT,EAAU,IAAM,IAarBU,EAAS,SAACC,GACdZ,EAAcY,GACdV,EAAWU,EAAO,IAAM,IAY1B,OACE,qCACE,6CACA,qBAAKzB,UAAU,OAAf,SACE,cAAC,EAAD,CAAME,QAASQ,EAAQE,GAAad,QA7BtB,SAACO,GACnB,IAAMqB,EAAehB,EAAQiB,MAAM,EAAGf,EAAa,GAC7CgB,EAAUF,EAAad,GACvBV,EAAO,YAAO0B,GAChBZ,GAAUd,EAAQG,KACtBH,EAAQG,GAAKkB,EACbZ,EAAW,GAAD,mBAAKe,GAAL,CAAmBxB,KAC7BW,EAAca,EAAaR,QAC3BH,GAAYD,SAuBV,sBAAKd,UAAU,eAAf,UACE,wBAAQF,QAAS,kBAAM0B,EAAO,IAA9B,mBACA,6BACGR,EACG,WAAaA,EACbJ,EAAa,EACb,gBAAkBW,EAClB,gBEtCCM,MARf,WACE,OACE,qBAAK7B,UAAU,MAAf,SACE,cAAC,EAAD,OCDA8B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.5cb2c88f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Square = ({ value, onClick }) => {\r\n  const style = value ? `squares ${value}` : `squares`;\r\n\r\n  return (\r\n    <button className={style} onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nconst Grid = ({ squares, onClick }) => (\r\n  <div className=\"board\">\r\n    {squares.map((square, i) => (\r\n      <Square key={i} value={square} onClick={() => onClick(i)} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Grid;\r\n","import React, { useState } from \"react\";\r\nimport { calculateWinner } from \"./Winner\";\r\nimport Grid from \"./Grid\";\r\n\r\nconst Game = () => {\r\n  const [history, setHistory] = useState([Array(9).fill(null)]);\r\n  const [stepNumber, setStepNumber] = useState(0);\r\n  const [xIsNext, setXisNext] = useState(true);\r\n  const winner = calculateWinner(history[stepNumber]);\r\n  const xO = xIsNext ? \"X\" : \"O\";\r\n\r\n  const handleClick = (i) => {\r\n    const historyPoint = history.slice(0, stepNumber + 1);\r\n    const current = historyPoint[stepNumber];\r\n    const squares = [...current];\r\n    if (winner || squares[i]) return;\r\n    squares[i] = xO;\r\n    setHistory([...historyPoint, squares]);\r\n    setStepNumber(historyPoint.length);\r\n    setXisNext(!xIsNext);\r\n  };\r\n\r\n  const jumpTo = (step) => {\r\n    setStepNumber(step);\r\n    setXisNext(step % 2 === 0);\r\n  };\r\n\r\n  const reset = () =>\r\n    history.map(() => {\r\n      return (\r\n        <div className=\"goto-btn\">\r\n          <button onClick={() => jumpTo(0)}>RESET</button>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <h1>Tic Tac Toe</h1>\r\n      <div className=\"main\">\r\n        <Grid squares={history[stepNumber]} onClick={handleClick} />\r\n      </div>\r\n      <div className=\"info-wrapper\">\r\n        <button onClick={() => jumpTo(0)}>RESET</button>\r\n        <h3>\r\n          {winner\r\n            ? \"Winner: \" + winner\r\n            : stepNumber < 9\r\n            ? \"Next Player: \" + xO\r\n            : \"Draw\"}\r\n        </h3>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export function calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import \"./styles.css\";\nimport Game from \"./Components/Game\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}